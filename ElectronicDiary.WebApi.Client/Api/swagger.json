{
  "openapi": "3.0.1",
  "info": {
    "title": "ElectronicDiary.Server",
    "version": "1.0"
  },
  "paths": {
    "/api/Class": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "Returned list of all classes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Class"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Class"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Class"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Class"
        ],
        "summary": "Add class in collection",
        "requestBody": {
          "description": "Exemplar of class which needed to be add in collection",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClassDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Class/{id}": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "Get class wiht such index",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indev of needed class",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Class"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Class"
        ],
        "summary": "Replace class with such index in collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of replacing class",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New exemplar of class that we are replacing the old one with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClassDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Class"
        ],
        "summary": "Delete class with such index from collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of deleting class",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Grade": {
      "get": {
        "tags": [
          "Grade"
        ],
        "summary": "Returned list of all grades",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grade"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grade"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grade"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Grade"
        ],
        "summary": "Add grade to collection",
        "requestBody": {
          "description": "Exemplar of grade to add to collection",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GradeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Grade/{id}": {
      "get": {
        "tags": [
          "Grade"
        ],
        "summary": "Get grade with such index",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of needed grade",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Grade"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grade"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grade"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Grade"
        ],
        "summary": "Replace grade with such index in collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of replacing grade",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New exemplar of grade to replace the old one",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GradeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Grade"
        ],
        "summary": "Delete grade with such index from collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of deleting grade",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Query/allSubjects": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Query 1: Retrieve information about all subjects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subject"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subject"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/studentsInClass": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Query 2: Retrieve information about all students in a specified class by its identifier, sorted by full name",
        "parameters": [
          {
            "name": "classId",
            "in": "query",
            "description": "Class identifier",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/studentsByDate": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Query 3: Retrieve information about all students who received grades on a specified date",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date of the grades",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentGradesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentGradesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentGradesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/top5StudentsByAverage": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Query 4: Retrieve the top 5 students by average grade",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentAverageGradeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentAverageGradeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentAverageGradeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/studentsWithMaxAverageByPeriod": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Query 5: Retrieve students with the highest average grade over a specified period",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of the period",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of the period",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentAverageGradeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentAverageGradeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentAverageGradeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Query/subjectGradesStatistics": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Query 6: Retrieve information on the minimum, average, and maximum grade for each subject",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectGradeStatisticsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectGradeStatisticsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectGradeStatisticsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Student": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Returned list of all students",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Add student to collection",
        "requestBody": {
          "description": "Exemplar of student to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Student/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Get student with such index",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of needed student",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Student"
        ],
        "summary": "Replace student with such index in collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of replacing student",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New exemplar of student",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Student"
        ],
        "summary": "Delete student with such index from collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of deleting student",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subject": {
      "get": {
        "tags": [
          "Subject"
        ],
        "summary": "Returned list of all subjects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subject"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subject"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subject"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subject"
        ],
        "summary": "Add subject to collection",
        "requestBody": {
          "description": "Exemplar of subject to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subject/{id}": {
      "get": {
        "tags": [
          "Subject"
        ],
        "summary": "Get subject with such index",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of needed subject",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Subject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subject"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subject"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subject"
        ],
        "summary": "Replace subject with such index in collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of replacing subject",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New exemplar of subject",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Subject"
        ],
        "summary": "Delete subject with such index from collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Index of deleting subject",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Class": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "letters": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClassDto": {
        "type": "object",
        "properties": {
          "number": {
            "maximum": 11,
            "minimum": 1,
            "type": "integer",
            "description": "Номер",
            "format": "int32"
          },
          "letters": {
            "maxLength": 6,
            "minLength": 1,
            "type": "string",
            "description": "Литера",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Grade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "$ref": "#/components/schemas/Subject"
          },
          "student": {
            "$ref": "#/components/schemas/Student"
          },
          "gradeValue": {
            "$ref": "#/components/schemas/GradeType"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "GradeDto": {
        "type": "object",
        "properties": {
          "subjectId": {
            "type": "integer",
            "description": "Предмет",
            "format": "int32"
          },
          "studentId": {
            "type": "integer",
            "description": "Ученик",
            "format": "int32"
          },
          "gradeValue": {
            "type": "integer",
            "description": "Оценка",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Дата получения",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "GradeType": {
        "enum": [
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Student": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "class": {
            "$ref": "#/components/schemas/Class"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "passport": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentAverageGradeDto": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "description": "Student's identifier",
            "format": "int32"
          },
          "surname": {
            "type": "string",
            "description": "Student's surname",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Student's first name",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Student's patronymic",
            "nullable": true
          },
          "averageGrade": {
            "type": "number",
            "description": "Student's average grade",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "DTO for representing a student's average grade"
      },
      "StudentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "description": "Фамилия",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество",
            "nullable": true
          },
          "classId": {
            "type": "integer",
            "description": "Идентификатор класса",
            "format": "int32"
          },
          "birthday": {
            "type": "string",
            "description": "Дата рождения",
            "format": "date"
          },
          "passport": {
            "pattern": "Серия: \\d{4} Номер: \\d{6} Кем выдан: .{1,70} Место регистрации: .{1,100}",
            "type": "string",
            "description": "Паспорт",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentGradesDto": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "description": "Student's identifier",
            "format": "int32"
          },
          "surname": {
            "type": "string",
            "description": "Student's surname",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Student's first name",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "description": "Student's patronymic",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Name of the subject for which the grade was received",
            "nullable": true
          },
          "grade": {
            "$ref": "#/components/schemas/GradeType"
          },
          "date": {
            "type": "string",
            "description": "Date when the grade was received",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "DTO for representing information about a student's grades on a specific day"
      },
      "Subject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "studyYear": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название предмета",
            "nullable": true
          },
          "studyYear": {
            "pattern": "\\d{4}-\\d{4}",
            "type": "string",
            "description": "Год обучения",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectGradeStatisticsDto": {
        "type": "object",
        "properties": {
          "subjectName": {
            "type": "string",
            "description": "Subject name",
            "nullable": true
          },
          "minGrade": {
            "type": "integer",
            "description": "Minimum grade for the subject",
            "format": "int32"
          },
          "maxGrade": {
            "type": "integer",
            "description": "Maximum grade for the subject",
            "format": "int32"
          },
          "averageGrade": {
            "type": "number",
            "description": "Average grade for the subject",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "DTO for representing grade statistics for a subject (minimum, maximum, and average grade)"
      }
    }
  }
}